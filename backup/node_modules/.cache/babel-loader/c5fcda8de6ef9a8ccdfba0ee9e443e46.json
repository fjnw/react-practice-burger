{"ast":null,"code":"var _jsxFileName = \"/Users/code/Documents/Website/practice/react-practice-burger/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport counterReducer from './store/reducers/counter';\nimport resultReducer from './store/reducers/result';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nvar rootReducer = combineReducers({\n  ctr: counterReducer,\n  res: resultReducer\n});\n\nvar logger = function logger(store) {\n  return function (next) {\n    return function (action) {\n      console.log('[Middleware] Dispatching', action);\n      var result = next(action);\n      console.log('[Middleware] next state', store.getState());\n      return result;\n    };\n  };\n};\n\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n})), document.getElementById('root'));\nregisterServiceWorker();","map":{"version":3,"sources":["/Users/code/Documents/Website/practice/react-practice-burger/src/index.js"],"names":["React","ReactDOM","Provider","createStore","combineReducers","applyMiddleware","compose","thunk","counterReducer","resultReducer","App","registerServiceWorker","rootReducer","ctr","res","logger","store","next","action","console","log","result","getState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEA,IAAMC,WAAW,GAAGR,eAAe,CAAC;AAChCS,EAAAA,GAAG,EAAEL,cAD2B;AAEhCM,EAAAA,GAAG,EAAEL;AAF2B,CAAD,CAAnC;;AAKA,IAAMM,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACpB,SAAO,UAAAC,IAAI,EAAI;AACX,WAAO,UAAAC,MAAM,EAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,MAAxC;AACA,UAAMG,MAAM,GAAGJ,IAAI,CAACC,MAAD,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCJ,KAAK,CAACM,QAAN,EAAvC;AACA,aAAOD,MAAP;AACH,KALD;AAMH,GAPD;AAQH,CATD;;AAWA,IAAME,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CnB,OAAxE;AAEA,IAAMU,KAAK,GAAGb,WAAW,CAACS,WAAD,EAAcW,gBAAgB,CAAClB,eAAe,CAACU,MAAD,EAASR,KAAT,CAAhB,CAA9B,CAAzB;AAEAN,QAAQ,CAACyB,MAAT,CAAgB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAxB,CAAhB,EAA4DW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5D;AACAjB,qBAAqB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport counterReducer from './store/reducers/counter';\nimport resultReducer from './store/reducers/result';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst rootReducer = combineReducers({\n    ctr: counterReducer,\n    res: resultReducer\n});\n\nconst logger = store => {\n    return next => {\n        return action => {\n            console.log('[Middleware] Dispatching', action);\n            const result = next(action);\n            console.log('[Middleware] next state', store.getState());\n            return result;\n        }\n    }\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}