{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nvar initialState = {\n  counter: 0\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      return updateObject(state, {\n        counter: state.counter + 1\n      });\n\n    case actionTypes.DECREMENT:\n      return updateObject(state, {\n        counter: state.counter - 1\n      });\n\n    case actionTypes.ADD:\n      return updateObject(state, {\n        counter: state.counter + action.val\n      });\n\n    case actionTypes.SUBTRACT:\n      return updateObject(state, {\n        counter: state.counter - action.val\n      });\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/code/Documents/Website/practice/react-practice-burger/src/store/reducers/counter.js"],"names":["actionTypes","updateObject","initialState","counter","reducer","state","action","type","INCREMENT","DECREMENT","ADD","val","SUBTRACT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAoC;AAAA,MAAlCC,KAAkC,uEAA1BH,YAA0B;AAAA,MAAZI,MAAY;;AAChD,UAASA,MAAM,CAACC,IAAhB;AACI,SAAKP,WAAW,CAACQ,SAAjB;AACI,aAAOP,YAAY,CAACI,KAAD,EAAQ;AAACF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAA1B,OAAR,CAAnB;;AACJ,SAAKH,WAAW,CAACS,SAAjB;AACI,aAAOR,YAAY,CAACI,KAAD,EAAQ;AAACF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAA1B,OAAR,CAAnB;;AACJ,SAAKH,WAAW,CAACU,GAAjB;AACI,aAAOT,YAAY,CAACI,KAAD,EAAQ;AAACF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACK;AAAjC,OAAR,CAAnB;;AACJ,SAAKX,WAAW,CAACY,QAAjB;AACI,aAAOX,YAAY,CAACI,KAAD,EAAQ;AAACF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACK;AAAjC,OAAR,CAAnB;AARR;;AAUA,SAAON,KAAP;AACH,CAZD;;AAcA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    counter: 0\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.INCREMENT:\n            return updateObject(state, {counter: state.counter + 1});\n        case actionTypes.DECREMENT:\n            return updateObject(state, {counter: state.counter - 1});\n        case actionTypes.ADD:\n            return updateObject(state, {counter: state.counter + action.val});\n        case actionTypes.SUBTRACT:\n            return updateObject(state, {counter: state.counter - action.val});\n    }\n    return state;\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}